\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{simplegtab}
  [2021/06/11 v0.01 LaTeX package for my own purpose]

\RequirePackage[utf8]{inputenc}
\RequirePackage{geometry}
\RequirePackage{xifthen}
\RequirePackage{tikz}
\RequirePackage{intcalc}

\newcounter{tabstrings}
\newcounter{tabbars}

\newcounter{tabcstring}
\newcounter{tabcbar}
\newcounter{tabcn}
\newcounter{tabcdn}

\newcounter{flag}

\newenvironment{tabline}[4]
{
	
	\newcommand{\gtuning}{#4}
	\newcommand{\timesigtop}{#2}
	\newcommand{\timesigbot}{#3}
	
	\newcommand{\tabwidth}{
		\textwidth - 0.6cm
	}	



	\newcommand{\nextbar}{
		\stepcounter{tabcbar}
	}

	% Draws one note on a current bar.
	% 
	% \note{numerator}{denominator}{string}{fret}
	%
	\newcommand{\note}[4]{
		\pgfmathsetlengthmacro\xpos{
			% skipping time sig and tuning
			0.8cm
			% skipping bars
			+ (\textwidth - 1.4cm) / \value{tabbars} * (\value{tabcbar} - 1)
			% calculating position inside a bar
			+ (\textwidth - 1.4cm) / \value{tabbars} / (##2 + 1) * ##1
		}
		\draw node[note] at (##3 - 1,\xpos) {##4};
	}

	%
	% The same as \note but draws the length of a note under strings tab.
	%
	% \note{numerator}{denominator}{string}{fret}{length}
	%
	\newcommand{\notel}[5]{
		\note{##1}{##2}{##3}{##4}
		\setcounter{flag}{0}
		\ifthenelse{\lengthtest{##5 pt = 1pt   }}
			{\note{##1}{##2}{\value{tabstrings} + 1}{\rotatebox{180}{\Ganz}}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 2pt   }}
			{\note{##1}{##2}{\value{tabstrings} + 1}{\rotatebox{180}{\Halb}}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 4pt   }}
			{\note{##1}{##2}{\value{tabstrings} + 1}{\rotatebox{180}{\Vier}}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 8pt   }}
			{\note{##1}{##2}{\value{tabstrings} + 1.3}{\rotatebox{180}{\Acht}}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 16pt  }}
			{\note{##1}{##2}{\value{tabstrings} + 1.3}{\rotatebox{180}{\Sech}}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 2.5pt }}
			{\note{##1}{##2}{\value{tabstrings} + 1}{\rotatebox{180}{\Halb}.}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 4.5pt }}
			{\note{##1}{##2}{\value{tabstrings} + 1}{\rotatebox{180}{\Vier}.}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 8.5pt }}
			{\note{##1}{##2}{\value{tabstrings} + 1.3}{\rotatebox{180}{\Acht}.}\setcounter{flag}{1}}{}
		\ifthenelse{\lengthtest{##5 pt = 16.5pt}}
			{\note{##1}{##2}{\value{tabstrings} + 1}{\rotatebox{180}{\Sech}.}\setcounter{flag}{1}}{}
		\ifthenelse{\value{flag} = 0}{\note{##1}{##2}{\value{tabstrings} + 1}{?}}{}
	}
	
	\newcommand{\notewithchord}[5]{
		\note{##1}{##2}{##3}{##4}
	    \note{##1}{##2}{0}{\guitarPreAccord{##5}}
	}

	%
	% Draws a whole rest symbol.
	%
	% \restwhole{numerator}{denominator}
	%
	\newcommand{\restwhole}[2]{
		\pgfmathsetlengthmacro\xpos{
			% skipping time sig and tuning
			0.8cm
			% skipping bars
			+ (\textwidth - 1.4cm) / \value{tabbars} * (\value{tabcbar} - 1)
			% calculating position inside a bar
			+ (\textwidth - 1.4cm) / \value{tabbars} / (##2 + 1) * ##1
		}
		\draw node[.style={scale=0.7}] at (\intcalcDiv{\value{tabstrings}}{2} - 1.05,\xpos) {\GaPa};
	}

	%
	% Draws a half rest symbol.
	%
	% \resthalf{numerator}{denominator}
	%
	\newcommand{\resthalf}[2]{
		\pgfmathsetlengthmacro\xpos{
			% skipping time sig and tuning
			0.8cm
			% skipping bars
			+ (\textwidth - 1.4cm) / \value{tabbars} * (\value{tabcbar} - 1)
			% calculating position inside a bar
			+ (\textwidth - 1.4cm) / \value{tabbars} / (##2 + 1) * ##1
		}
		\draw node[.style={scale=0.7}] at (\intcalcDiv{\value{tabstrings}}{2} - 0.85,\xpos) {\HaPa};
	}

	%
	% Draws a quarter rest symbol.
	%
	% \restquarter{numerator}{denominator}
	%
	\newcommand{\restquarter}[2]{
		\note{##1}{##2}{\intcalcDiv{\value{tabstrings}}{2}}{\ViPa}
	}

	%
	% Draws a eighth rest symbol.
	%
	% \resteigth{numerator}{denominator}
	%
	\newcommand{\resteighth}[2]{
		\note{##1}{##2}{\intcalcDiv{\value{tabstrings}}{2}}{\AcPa}
	}

	%
	% Draws a sixteenth rest symbol.
	%
	% \restsixteenth{numerator}{denominator}
	%
	\newcommand{\restsixteenth}[2]{
		\note{##1}{##2}{\intcalcDiv{\value{tabstrings}}{2}}{\SePa}
	}

	%-------------------------------------------------------------------------------
	%               Setting counters
	%-------------------------------------------------------------------------------

	% Set a number of strings
	\setcounter{tabstrings}{0}
	\foreach \tuning in \gtuning {
		\addtocounter{tabstrings}{1}
	}

	% Set a number of bars
	\setcounter{tabbars}{#1}

	% Current bar
	\setcounter{tabcbar}{1}

	%-------------------------------------------------------------------------------
	%               Drawing
	%-------------------------------------------------------------------------------

	
		\begin{tikzpicture}[
			note/.style={rectangle,fill=white, scale=1,inner ysep=-4pt, inner xsep=1pt},
			cm={0,-0.3,1,0,(0,0)}
		]
		
		\setcounter{tabcstring}{\value{tabstrings}}
	
	
		% Drawing TAB
		\node[
			xshift=0.4cm,
			font=\Large\bfseries\sffamily
		] at (1,0) {T};
		\node[
			xshift=0.4cm,
			font=\Large\bfseries\sffamily
		] at (2.5,0) {A};
		\node[
			xshift=0.4cm,
			font=\Large\bfseries\sffamily
		] at (4,0) {B};
		
		
		% Drawing strings
		\foreach \tline in {1,...,\value{tabstrings}} {
			\draw (\tline - 1,0) -- (\tline - 1,\tabwidth);
		}
	
		% Drawing bars
		\draw (0,0) -- (\value{tabstrings}-1,0);
	
		\foreach \tbar in {1,...,\value{tabbars}} {
			\pgfmathsetlengthmacro\barpos{ (\textwidth - 1.4cm) / \value{tabbars} * \tbar + 0.8cm }
			\draw (0,\barpos) -- (\value{tabstrings}-1,\barpos);
		}
} {
	\end{tikzpicture}

}
\endinput